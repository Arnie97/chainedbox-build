

#===============================================
# Description: 我家云 Armbian 编译脚本
# File name: Chainedbox-build.yml
# Lisence: MIT
# Author: WingonWu
# https://github.com/WingonWu/Chainedbox-build
#===============================================

name: 我家云 Armbian
# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  repository_dispatch:
  workflow_dispatch:
  schedule:
# 自动编译时间
    - cron: '0 22 * * *'
    
#环境变量配置
env:
  REPO_URL: https://github.com/armbian/build
  REPO_BRANCH: master
  BOARD: rock64
  BRANCH: edge
  RELEASE: buster
  BUILD_MINIMAL: no
  BUILD_DESKTOP: no
  KERNEL_ONLY: yes
  KERNEL_CONFIGURE: yes
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH armian
        ln -sf /workdir/armian $GITHUB_WORKSPACE/armian
        cd $GITHUB_WORKSPACE
        echo “ GITHUB_WORKSPACE LS ”
        ls
        mv $GITHUB_WORKSPACE/userpatches /workdir/armian
        cd armian
        useVersionInfo=$(git show -s --date=short --format="Author: %an<br/>date: %cd<br/>commit: %s<br/>commit hash: %H")
        echo "useVersionInfo=$useVersionInfo" >> $GITHUB_ENV
        echo $useVersionInfo
        echo armbian ls
        ls
      
        sudo ./compile.sh BOARD=rock64 BRANCH=current BUILD_MINIMAL=no BUILD_DESKTOP=no KERNEL_ONLY=yes KERNEL_CONFIGURE=yes
    - name: 系统镜像打包
      run: |

          rm -rf ./artifact/

          mkdir -p ./artifact/

          find ./output/ -name "*img" | xargs -i sudo xz -v {} 

          find ./output/ -name "*img*" | xargs -i sudo mv -f {} ./artifact/

    - name: Create Release

      id: create_release

      uses: ncipollo/release-action@v1

      env:

        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token

      with:

        artifacts: "./artifact//*.*"

        allowUpdates: true 

        commit: master 

        tag: ${{ env.BUILD_DATE }}_master_R6300V2_iZRT_${{ env.MERLIN_TAG }}

        body: |

          this is only a latest build from master

          version: https://github.com/RMerl/asuswrt-merlin.ng/${{ env.MERLIN_VERSION }}

        token: ${{ secrets.GITHUB_TOKEN }}

        draft: false

        prerelease: false
